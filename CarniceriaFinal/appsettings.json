{
  //"ConnectionStrings": {
  //  "DefaultConnection": "Server=carniceria-zamorano-db.mysql.database.azure.com;UserID = zamoranoservidor;Password=12345678#!C0rn3;Database=carniceria",
  //  "AzureBlobStorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=zamorano;AccountKey=tyQKrcJ4b3P1WeApxnLppB+jdDcPqCe/On8Fj0eLG720kQla5ylZsq1euVSfGuMsTZLrPaaPW4I3+AStQU7xVw==;EndpointSuffix=core.windows.net"
  //},
  "AppConstants": {
    "MaximumDaysState": 15,
    "MiliSegToCheckSale": 5000,
    "MiliSegToDisableSale": 60000
  },
  //"AppSettings": {
  //  "Secret": "9WJlToEXoJtXu6YuoCCYvQZmhmwu5oMjObvMptWijd32hrXcDA1vRql2t9f4RroRGuAVbGM67KwQTfkmP3CeHhHlJOVLOlqQO"
  //},
  "AppSettings": {
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "MailSettings": {
    "Mail": "jimy.coxr@ug.edu.ec",
    "DisplayName": "Carnicería Zamorano",
    "Password": "",
    "Host": "smtp.sendgrid.net",
    "Port": 587
  },
  "Modules": {
    "Modules": [
      {
        "moduleName": "Ofertas",
        "controllName": "Promotion",
        "baseUrl": "Promotion",
        "idModule": 1,
        "endpoints": [
          {
            "nameEndpoint": "GetAll",
            "pathEndpoint": "",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllProductsByIdPromotion",
            "pathEndpoint": "products-to-promo/{idPromotion}",
            "method": "get"
          },
          {
            "nameEndpoint": "CreatePromotion",
            "pathEndpoint": "",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdatePromotion",
            "pathEndpoint": "",
            "method": "put"
          },
          {
            "nameEndpoint": "StatusPromotion",
            "pathEndpoint": "{status}/{idPromotion}",
            "method": "Patch"
          },
          {
            "nameEndpoint": "isAvailabilityToCreatePromotion",
            "pathEndpoint": "isAvailability-promotion",
            "method": "post"
          }
        ]
      },
      {
        "moduleName": "Ofertas",
        "controllName": "PromotionalEmail",
        "baseUrl": "PromotionalEmail",
        "idModule": 1,
        "endpoints": [
          {
            "nameEndpoint": "GetEmailByidPromotion",
            "pathEndpoint": "{idPromotion}",
            "method": "get"
          },
          {
            "nameEndpoint": "CreateEmailByIdPromotion",
            "pathEndpoint": "",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdateEmailByidEmail",
            "pathEndpoint": "",
            "method": "put"
          },
          {
            "nameEndpoint": "SendPromotionalEmail",
            "pathEndpoint": "send-email/{idPromotion}/{idCorreoPromotion}",
            "method": "post"
          },
          {
            "nameEndpoint": "RetrySenderEmailByIdPromotion",
            "pathEndpoint": "retry-send-email/{idPromotion}/{idCorreoPromotion}",
            "method": "post"
          },
          {
            "nameEndpoint": "CancelSenderEmailByIdPromotion",
            "pathEndpoint": "cancel-send-email/{idPromotion}",
            "method": "post"
          },
          {
            "nameEndpoint": "GetUserStatusByIdEmail",
            "pathEndpoint": "user-status-email/{idCorreoPromotion}",
            "method": "get"
          }
        ]
      },
      {
        "moduleName": "Recomendaciones",
        "controllName": "Recommendation",
        "baseUrl": "Recommendation",
        "idModule": 2,
        "endpoints": [
          {
            "nameEndpoint": "GetAllTimesToEatGeneralUser",
            "pathEndpoint": "user-momento-degustacion",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllPreparationWaysGeneralUser",
            "pathEndpoint": "user-modo-preparacion/{idTimeToEat}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetProductsRecommendationByPreparationAndTimeToEat",
            "pathEndpoint": "filter-recom/{idTimeToEat}/{idPreparationWay}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllTimesToEat",
            "pathEndpoint": "momento-degustacion",
            "method": "get"
          },
          {
            "nameEndpoint": "ChangeStatusTimesToEat",
            "pathEndpoint": "cambiar-estado-momento-degustacion",
            "method": "put"
          },
          {
            "nameEndpoint": "GetAllPreparationWays",
            "pathEndpoint": "modo-preparacion",
            "method": "get"
          },
          {
            "nameEndpoint": "ChangeStatusPreparationWays",
            "pathEndpoint": "cambiar-estado-modo-preparacion",
            "method": "put"
          },
          {
            "nameEndpoint": "GetTimeToEatDetail",
            "pathEndpoint": "detalle-momento-degustacion/{idTimeToEat}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetPreparationWayDetail",
            "pathEndpoint": "detalle-modo-preparacion/{idPreparationWay}",
            "method": "get"
          },
          {
            "nameEndpoint": "CreatePreparationWay",
            "pathEndpoint": "crear-modo-preparacion",
            "method": "post"
          },
          {
            "nameEndpoint": "CreateTimeToEat",
            "pathEndpoint": "crear-momento-degustacion",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdatePreparationWay",
            "pathEndpoint": "actualizar-modo-preparacion",
            "method": "put"
          },
          {
            "nameEndpoint": "UpdateTimeToEat",
            "pathEndpoint": "actualizar-momento-degustacion",
            "method": "put"
          },
          {
            "nameEndpoint": "GetAllSpecialEvent",
            "pathEndpoint": "obtener-eventos-especiales",
            "method": "get"
          },
          {
            "nameEndpoint": "CreateSpecialEvent",
            "pathEndpoint": "crear-eventos-especiales",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdateSpecialEvent",
            "pathEndpoint": "actualizar-eventos-especiales",
            "method": "put"
          },
          {
            "nameEndpoint": "DisableSpecialEvent",
            "pathEndpoint": "desactivar-eventos-especiales/{idSpecialEvent}",
            "method": "put"
          },
          {
            "nameEndpoint": "EnableSpecialEvent",
            "pathEndpoint": "activar-eventos-especiales/{idSpecialEvent}",
            "method": "put"
          },
          {
            "nameEndpoint": "GetSpecialEventByIdEvent",
            "pathEndpoint": "obtener-eventos-especiales-byid/{idSpecialEvent}",
            "method": "get"
          },
          {
            "nameEndpoint": "isAvailabilityToEnableSpecialday",
            "pathEndpoint": "isAvailablity-especial",
            "method": "post"
          }
        ]
      },
      {
        "moduleName": "Membresía",
        "controllName": "Membership",
        "baseUrl": "Membership",
        "idModule": 3,
        "endpoints": [
          {
            "nameEndpoint": "GetMembershipHome",
            "pathEndpoint": "",
            "method": "get"
          },
          {
            "nameEndpoint": "AdministrationMembershipTimes",
            "pathEndpoint": "admin-members",
            "method": "get"
          },
          {
            "nameEndpoint": "GetMembershipByIdUser",
            "pathEndpoint": "membership-user/idUser",
            "method": "get"
          }
        ]
      },
      {
        "moduleName": "Seguridad",
        "controllName": "Autenticacion",
        "baseUrl": "Autenticacion",
        "idModule": 4,
        "endpoints": [
          {
            "nameEndpoint": "Login",
            "pathEndpoint": "login",
            "method": "post"
          },
          {
            "nameEndpoint": "CreateUser",
            "pathEndpoint": "register",
            "method": "post"
          },
          {
            "nameEndpoint": "CreateUserByRol",
            "pathEndpoint": "by-rol/register",
            "method": "post"
          }
        ]
      },
      {
        "moduleName": "Seguridad",
        "controllName": "Rol",
        "baseUrl": "Rol",
        "idModule": 4,
        "endpoints": [
          {
            "nameEndpoint": "GetAllDetailRoles",
            "pathEndpoint": "rol",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllRoles",
            "pathEndpoint": "roles",
            "method": "get"
          },
          {
            "nameEndpoint": "GetOptionsByRoles",
            "pathEndpoint": "{idRol}",
            "method": "Get"
          },
          {
            "nameEndpoint": "GetAllUserAdmin",
            "pathEndpoint": "users-admin",
            "method": "Get"
          },
          {
            "nameEndpoint": "DisableUser",
            "pathEndpoint": "user-admin/{idUser}",
            "method": "delete"
          },
          {
            "nameEndpoint": "EnableUser",
            "pathEndpoint": "user-admin/{idUser}",
            "method": "patch"
          },
          {
            "nameEndpoint": "DisabledRol",
            "pathEndpoint": "{idRol}",
            "method": "delete"
          },
          {
            "nameEndpoint": "EnableRol",
            "pathEndpoint": "{idRol}",
            "method": "patch"
          },
          {
            "nameEndpoint": "UpdateRolPermissions",
            "pathEndpoint": "{idRol}",
            "method": "put"
          },
          {
            "nameEndpoint": "CreateUserAdminByRol",
            "pathEndpoint": "create-user",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdateUserAdminByRol",
            "pathEndpoint": "update-user",
            "method": "put"
          }
        ]
      },
      {
        "moduleName": "Seguridad",
        "controllName": "User",
        "baseUrl": "User",
        "idModule": 4,
        "endpoints": [
          {
            "nameEndpoint": "Login",
            "pathEndpoint": "{username}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetProfileInfo",
            "pathEndpoint": "profile/{idUser}",
            "method": "get"
          },
          {
            "nameEndpoint": "UpdateProfileInfo",
            "pathEndpoint": "profile/{idUser}",
            "method": "put"
          },
          {
            "nameEndpoint": "UpdateStatusReceivedEmailByIdUser",
            "pathEndpoint": "profile/status-received-email/{idUser}",
            "method": "put"
          }
        ]
      },
      {
        "moduleName": "Categorias",
        "controllName": "Categorias",
        "baseUrl": "Categoria",
        "idModule": 5,
        "endpoints": [
          {
            "nameEndpoint": "GetCategoryById",
            "pathEndpoint": "get-category/{idCategory}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllCategories",
            "pathEndpoint": "only-categories",
            "method": "get"
          },
          {
            "nameEndpoint": "CreateCategory",
            "pathEndpoint": "",
            "method": "post"
          },
          {
            "nameEndpoint": "GetAllAdmCategories",
            "pathEndpoint": "only-categories-admin",
            "method": "get"
          }
        ]
      },
      {
        "moduleName": "Producto",
        "controllName": "Producto",
        "baseUrl": "Producto",
        "idModule": 6,
        "endpoints": [
          {
            "nameEndpoint": "GetProductosInCar",
            "pathEndpoint": "products-in-car",
            "method": "post"
          },
          {
            "nameEndpoint": "GetSimpleProducts",
            "pathEndpoint": "simple-products",
            "method": "get"
          },
          {
            "nameEndpoint": "GetDetailAdminProductoById",
            "pathEndpoint": "product-detail/{idProduct}",
            "method": "get"
          },
          {
            "nameEndpoint": "getAllProductsPromotions",
            "pathEndpoint": "products-promotion",
            "method": "get"
          },
          {
            "nameEndpoint": "FindProductsByCategoryId",
            "pathEndpoint": "by-category/{idCategory}",
            "method": "get"
          },
          {
            "nameEndpoint": "SaveProduct",
            "pathEndpoint": "",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdateProduct",
            "pathEndpoint": "update",
            "method": "put"
          },
          {
            "nameEndpoint": "DeleteProduct",
            "pathEndpoint": "{idProduct}",
            "method": "delete"
          },
          {
            "nameEndpoint": "EnableProduct",
            "pathEndpoint": "enable/{idProduct}",
            "method": "put"
          },
          {
            "nameEndpoint": "UpdateStock",
            "pathEndpoint": "stock/{idProduct}/{stock}",
            "method": "patch"
          },
          {
            "nameEndpoint": "DeleteProductDetail",
            "pathEndpoint": "product-detail/{idProduct}",
            "method": "delete"
          }
        ]
      },
      {
        "moduleName": "Ventas",
        "controllName": "SalesAdm",
        "baseUrl": "SalesAdm",
        "idModule": 7,
        "endpoints": [
          {
            "nameEndpoint": "GetAllSales",
            "pathEndpoint": "sales-by-status/{idStatus}",
            "method": "get"
          },
          {
            "nameEndpoint": "GetDetailByIdSale",
            "pathEndpoint": "detalle-venta/{idSale}",
            "method": "get"
          },
          {
            "nameEndpoint": "AttendSale",
            "pathEndpoint": "satender-venta",
            "method": "post"
          },
          {
            "nameEndpoint": "DeclineSale",
            "pathEndpoint": "rechazar-venta",
            "method": "post"
          }
        ]
      },
      {

        "moduleName": "Ventas",
        "controllName": "Sales",
        "baseUrl": "Sales",
        "idModule": 7,
        "endpoints": [
          {
            "nameEndpoint": "CreateSaleNoUser",
            "pathEndpoint": "no-user",
            "method": "post"
          },
          {
            "nameEndpoint": "CreateSaleUser",
            "pathEndpoint": "user",
            "method": "post"
          },
          {
            "nameEndpoint": "UpdateStatus",
            "pathEndpoint": "status/{idSale}/status/{idStatus}",
            "method": "patch"
          },
          {
            "nameEndpoint": "DeleteSale",
            "pathEndpoint": "{idSale}",
            "method": "delete"
          },
          {
            "nameEndpoint": "GetAllSalesStatus",
            "pathEndpoint": "type-status",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllSales",
            "pathEndpoint": "",
            "method": "get"
          },
          {
            "nameEndpoint": "GetAllSalesByIdClient",
            "pathEndpoint": "{idClient}",
            "method": "get"
          }
        ]
      }
    ]
  }

}
